package mapreduce;

import com.vmware.vim25.*;
import com.vmware.vim25.mo.*;

import java.net.MalformedURLException;
import java.net.URL;
import java.rmi.RemoteException;

public class vSphereClient
{
	private ServiceInstance _si;
	
	// Connect to the default hypervisor
	public vSphereClient() throws RemoteException, MalformedURLException
	{
		this("https://192.168.1.150/sdk", "root", "GreenLantern56");
	}
	
	// Connect to a specific hypervisor using the given username and password.
	public vSphereClient(String url, String username, String password) throws RemoteException, MalformedURLException
	{
		// Connect to the hypervisor server
		_si = new ServiceInstance(new URL(url), username, password, true);
	}
	
	// Retrieves the current resource utilization for a specific virtual machine
	public ResourceUtilization retrieveMachineUtilization(String virtualMachineName) throws InvalidProperty, RuntimeFault, RemoteException
	{
		// Retrieve all virtual machines
		ManagedEntity[] virtualMachines = new InventoryNavigator(_si.getRootFolder()).searchManagedEntities("VirtualMachine");
		
		for (ManagedEntity managedEntity : virtualMachines)
		{
			VirtualMachine virtualMachine = (VirtualMachine) managedEntity;
			System.out.println("- " + virtualMachine.getName());
			
			if (virtualMachine.getName().equalsIgnoreCase(virtualMachineName))
			{
				int maxCpuUsage = virtualMachine.getRuntime().getMaxCpuUsage();
	            int currentCpuUsage = virtualMachine.getSummary().getQuickStats().getOverallCpuUsage();
	            float currentCpuUtilization = (float)currentCpuUsage / (float)maxCpuUsage;

	            int maxMemoryUsage = virtualMachine.getRuntime().getMaxMemoryUsage();
	            int currentMemoryUsage = virtualMachine.getSummary().getQuickStats().getGuestMemoryUsage();
	            float currentMemoryUtilization = (float)currentMemoryUsage / (float)maxMemoryUsage;
	            
	            return new ResourceUtilization(currentCpuUtilization, currentMemoryUtilization);
			}
		}
		
		return null;
	}
}
