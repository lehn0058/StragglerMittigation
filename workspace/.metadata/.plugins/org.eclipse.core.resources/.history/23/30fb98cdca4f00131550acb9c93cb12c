package mapreduce;


import com.vmware.vim25.*;
import com.vmware.vim25.mo.*;

import java.net.MalformedURLException;
import java.net.URL;
import java.rmi.RemoteException;
import java.util.*;

import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLSession;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.soap.SOAPFaultException;

public class TestClient {

	// Authentication is handled by using a TrustManager and supplying
	// a host name verifier method. (The host name verifier is declared
	// in the main function.)
	// See Example: Obtaining a Session Token - Code Fragments from
	// VMPromoteDisks.java for more details.
	private static class TrustAllTrustManager implements
			javax.net.ssl.TrustManager, javax.net.ssl.X509TrustManager {

		public java.security.cert.X509Certificate[] getAcceptedIssuers() {
			return null;
		}

		public boolean isServerTrusted(
				java.security.cert.X509Certificate[] certs) {
			return true;
		}

		public boolean isClientTrusted(
				java.security.cert.X509Certificate[] certs) {
			return true;
		}

		public void checkServerTrusted(
				java.security.cert.X509Certificate[] certs, String authType)
				throws java.security.cert.CertificateException {
			return;
		}

		public void checkClientTrusted(
				java.security.cert.X509Certificate[] certs, String authType)
				throws java.security.cert.CertificateException {
			return;
		}
	}

	private void Go(String url, String username, String password) throws RemoteException, MalformedURLException, InvalidProperty, RuntimeFault
	{
		ServiceInstance si = new ServiceInstance(new URL(url), username, password, true);
		ManagedEntity[] hostsystems = new InventoryNavigator(si.getRootFolder()).searchManagedEntities("HostSystem");
		for(int i=0;i<hostsystems.length;i++) {
			HostSystem host = (HostSystem) hostsystems[i];
			System.out.println("Host: " + host.getName());
			VirtualMachine[] vms = (VirtualMachine[]) host.getVms();
			for(int j=0;j<vms.length;j++) {
				VirtualMachine vm = (VirtualMachine) vms[j];
				System.out.println("- " + vm.getName());
			}
		}
	}
	
	public static void main(String[] args) {
		
			// Server URL and credentials.
			String serverName = args[0];
			String userName = args[1];
			String password = args[2];
			String url = "https://" + serverName + "/sdk/vimService";

		Go("https://192.168.1.150/sdk", "root", "password");
	}// end main()
}// end class TestClient